// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistema.Models;

namespace sistema.Migrations
{
    [DbContext(typeof(SistemaContext))]
    [Migration("20181126111215_Country")]
    partial class Country
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("sistema.Models.AccessToken", b =>
                {
                    b.Property<int>("IdAccessToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<byte[]>("AccessToken1")
                        .IsRequired()
                        .HasColumnName("AccessToken")
                        .HasColumnType("blob");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("date");

                    b.Property<int?>("NeighborhoodIdNeighborhood");

                    b.Property<int>("Origem")
                        .HasColumnType("int(11)");

                    b.Property<int>("PessoaFisica")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("date");

                    b.HasKey("IdAccessToken");

                    b.HasIndex("NeighborhoodIdNeighborhood");

                    b.HasIndex("Origem")
                        .HasName("FK_ea_idx");

                    b.HasIndex("PessoaFisica")
                        .HasName("FK_pf_idx");

                    b.ToTable("AccessToken","Sistema");
                });

            modelBuilder.Entity("sistema.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("IdState");

                    b.HasKey("IdCity");

                    b.HasIndex("IdState");

                    b.ToTable("City");
                });

            modelBuilder.Entity("sistema.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.HasKey("IdCountry");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("sistema.Models.EntidadeAutenticadora", b =>
                {
                    b.Property<int>("IdEntidadeAutenticadora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.HasKey("IdEntidadeAutenticadora");

                    b.ToTable("EntidadeAutenticadora","Sistema");
                });

            modelBuilder.Entity("sistema.Models.Neighborhood", b =>
                {
                    b.Property<int>("IdNeighborhood")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("IdCity");

                    b.HasKey("IdNeighborhood");

                    b.HasIndex("IdCity");

                    b.ToTable("Neighborhood");
                });

            modelBuilder.Entity("sistema.Models.PessoaFisica", b =>
                {
                    b.Property<int>("IdPessoaFisica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<byte?>("Maior")
                        .HasColumnType("tinyint(4)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("NickName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.HasKey("IdPessoaFisica");

                    b.ToTable("PessoaFisica","Sistema");
                });

            modelBuilder.Entity("sistema.Models.State", b =>
                {
                    b.Property<int>("IdState")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("IdCountry");

                    b.HasKey("IdState");

                    b.HasIndex("IdCountry");

                    b.ToTable("State");
                });

            modelBuilder.Entity("sistema.Models.AccessToken", b =>
                {
                    b.HasOne("sistema.Models.Neighborhood")
                        .WithMany("AccessToken")
                        .HasForeignKey("NeighborhoodIdNeighborhood");

                    b.HasOne("sistema.Models.EntidadeAutenticadora", "OrigemNavigation")
                        .WithMany("AccessToken")
                        .HasForeignKey("Origem")
                        .HasConstraintName("FK_ea");

                    b.HasOne("sistema.Models.PessoaFisica", "PessoaFisicaNavigation")
                        .WithMany("AccessToken")
                        .HasForeignKey("PessoaFisica")
                        .HasConstraintName("FK_pf");
                });

            modelBuilder.Entity("sistema.Models.City", b =>
                {
                    b.HasOne("sistema.Models.State", "IdStateNavigation")
                        .WithMany("Cities")
                        .HasForeignKey("IdState")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("sistema.Models.Neighborhood", b =>
                {
                    b.HasOne("sistema.Models.City", "IdCityNavigation")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("sistema.Models.State", b =>
                {
                    b.HasOne("sistema.Models.Country", "IdCountryNavigation")
                        .WithMany("States")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
